"""
RVM Konfig√ºrasyon Y√∂netimi
Bu dosya RVM'ye √∂zel konfig√ºrasyon deƒüerlerini y√∂netir.
"""
import os
from typing import Optional
from dotenv import load_dotenv

class RVMConfig:
    """RVM konfig√ºrasyon sƒ±nƒ±fƒ±"""
    
    def __init__(self):
        # .env dosyasƒ±nƒ±n varlƒ±ƒüƒ±nƒ± kontrol et
        env_file_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), '.env')
        
        if not os.path.exists(env_file_path):
            self._interactive_setup()
        else:
            # .env dosyasƒ± varsa y√ºkle
            load_dotenv()
            self.SECRET_KEY = os.getenv('RVM_SECRET_KEY', 'testkpl')
            self.RVM_ID = os.getenv('RVM_ID', '')
            self.BASE_URL = os.getenv('RVM_BASE_URL', 'http://192.168.53.1:5432')
            
            # Eƒüer RVM_ID bo≈üsa tekrar kurulum yap
            if not self.RVM_ID:
                self._interactive_setup()
    
    def _interactive_setup(self):
        """ƒ∞nteraktif kurulum s√ºreci"""
        self._print_header()
        self._print_welcome()
        
        # RVM ID giri≈üi
        self.RVM_ID = self._get_rvm_id()
        
        # Kurulum onayƒ±
        self._confirm_setup()
        
        # Kurulumu tamamla
        self._complete_setup()
    
    def _print_header(self):
        """Kurulum ba≈ülƒ±ƒüƒ±nƒ± yazdƒ±rƒ±r"""
        print("\n" + "="*60)
        print("üöÄ RVM KURULUM Sƒ∞STEMƒ∞")
        print("="*60)
    
    def _print_welcome(self):
        """Ho≈ü geldin mesajƒ±nƒ± yazdƒ±rƒ±r"""
        print("\nüìã KURULUM BA≈ûLATILIYOR")
        print("‚îÄ" * 30)
        print("L√ºtfen kurulum yapƒ±nƒ±z!")
        print("‚îÄ" * 30)
        print()
    
    def _get_rvm_id(self):
        """RVM ID giri≈üi ve doƒürulama"""
        while True:
            print("\nüîë RVM ID Gƒ∞Rƒ∞≈ûƒ∞")
            print("‚îÄ" * 20)
            
            rvm_id = input("\nüíª RVM ID kodunu giriniz: ").strip()
            
            if not rvm_id:
                print("\n‚ùå RVM ID bo≈ü olamaz!")
                print("üîÑ L√ºtfen tekrar deneyin...\n")
                continue
            
            print(f"\nüìù Girdiƒüiniz kod: {rvm_id}")
            print("‚îÄ" * 30)
            
            while True:
                confirm = input("‚úÖ Doƒüru mu? (y/n): ").strip().lower()
                if confirm == 'y':
                    print(f"\nüéØ RVM ID onaylandƒ±: {rvm_id}")
                    print("‚îÄ" * 30)
                    return rvm_id
                elif confirm == 'n':
                    print("\nüîÑ Yeni RVM ID giriniz...\n")
                    break
                else:
                    print("‚ö†Ô∏è  L√ºtfen 'y' veya 'n' giriniz!")
    
    def _confirm_setup(self):
        """Kurulum onayƒ±"""
        print("\nüìã KURULUM √ñZETƒ∞")
        print("‚îÄ" * 20)
        print(f"\nüè∑Ô∏è  RVM ID: {self.RVM_ID}")
        print("üîê SECRET KEY: testkpl")
        print("üåê BASE URL: http://192.168.53.1:5432")
        print("\n‚îÄ" * 3)
        
        while True:
            confirm_setup = input("üöÄ Kurulumu tamamlamak istiyor musunuz? (y/n): ").strip().lower()
            if confirm_setup == 'y':
                print("‚îÄ" * 30)
                break
            elif confirm_setup == 'n':
                print("\n‚ùå Kurulum iptal edildi!")
                print("üëã √áƒ±kƒ±lƒ±yor...")
                exit(1)
            else:
                print("‚ö†Ô∏è  L√ºtfen 'y' veya 'n' giriniz!")
    
    def _complete_setup(self):
        """Kurulumu tamamlar"""
        print("\n‚öôÔ∏è  KURULUM YAPILIYOR")
        print("‚îÄ" * 25)
        
        # Dosya olu≈üturma animasyonu
        print("\nüìÅ .env dosyasƒ± olu≈üturuluyor...")
        import time
        time.sleep(0.5)
        print("üîß Konfig√ºrasyon ayarlanƒ±yor...")
        time.sleep(0.5)
        print("üíæ Deƒüerler kaydediliyor...")
        time.sleep(0.5)
        
        self._create_env_file()
        
        print("\n" + "="*60)
        print("‚úÖ KURULUM TAMAMLANDI!")
        print("="*60)
        
        print(f"\nüéØ RVM ID: {self.RVM_ID}")
        print("üìÅ Konfig√ºrasyon dosyasƒ±: .env")
        print("üöÄ Sistem ba≈ülatƒ±lƒ±yor...")
        print("\n‚îÄ" * 3)
        print("üéâ Ho≈ü geldiniz! RVM sistemi hazƒ±r.")
        print("‚îÄ" * 30)
        print("="*60)
    
    def _create_env_file(self):
        """Konfig√ºrasyon dosyasƒ±nƒ± olu≈üturur"""
        env_file_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), '.env')
        
        # Varsayƒ±lan deƒüerler
        self.SECRET_KEY = 'testkpl'
        self.BASE_URL = 'http://192.168.53.1:5432'
        
        # .env dosyasƒ±nƒ± olu≈ütur
        content = f"""# RVM Konfig√ºrasyonu
# Bu dosya otomatik olu≈üturulmu≈ütur

RVM_ID={self.RVM_ID}
RVM_SECRET_KEY={self.SECRET_KEY}
RVM_BASE_URL={self.BASE_URL}
"""
        
        with open(env_file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        # Environment variables'larƒ± y√ºkle
        load_dotenv()
    
    def get_config_dict(self) -> dict:
        """Konfig√ºrasyonu dictionary olarak d√∂nd√ºr√ºr"""
        return {
            'SECRET_KEY': self.SECRET_KEY,
            'RVM_ID': self.RVM_ID,
            'BASE_URL': self.BASE_URL
        }

# Global konfig√ºrasyon instance'ƒ±
config = RVMConfig()
